openapi: 3.0.0
info:
  description: This is an OpenAPI specification for the University Life Manager backend.
    Request/response objects can be specified in components. Endpoints can be specified
    in paths.
  title: University Life Manager API
  version: 1.0.0
servers:
- url: /api/v1
security:
- bearerAuth: []
paths:
  /cat:
    get:
      operationId: cat_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Cat'
                type: array
          description: OK
        "401":
          description: Credentials are missing or invalid
      summary: Get all cats for the user
      tags:
      - example
      x-openapi-router-controller: ulmapi.controllers.impl.example_controller
    post:
      operationId: cat_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cat'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cat'
          description: Created
        "401":
          description: Credentials are missing or invalid
      summary: Create a new cat for the user
      tags:
      - example
      x-openapi-router-controller: ulmapi.controllers.impl.example_controller
  /cat/{catId}:
    get:
      operationId: cat_cat_id_get
      parameters:
      - description: Cat ID
        explode: false
        in: path
        name: catId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cat'
          description: OK
        "401":
          description: Credentials are missing or invalid
        "404":
          description: Entity could not be found
      summary: Get cat by id for the user
      tags:
      - example
      x-openapi-router-controller: ulmapi.controllers.impl.example_controller
    put:
      operationId: cat_cat_id_put
      parameters:
      - description: Cat ID
        explode: false
        in: path
        name: catId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cat'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cat'
          description: OK
        "401":
          description: Credentials are missing or invalid
        "404":
          description: Entity could not be found
      summary: Replace a cat for the user
      tags:
      - example
      x-openapi-router-controller: ulmapi.controllers.impl.example_controller
  /login:
    post:
      operationId: login_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCredentials'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessToken'
          description: OK
        "401":
          description: Credentials are missing or invalid
      security: []
      summary: Exchange username and password for access token
      x-openapi-router-controller: ulmapi.controllers.impl.default_controller
  /schedule:
    post:
      operationId: schedule_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduleInfo'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleInfo'
          description: Created
        "401":
          description: Credentials are missing or invalid
      summary: Request generation of a new schedule
      x-openapi-router-controller: ulmapi.controllers.impl.default_controller
  /signup:
    post:
      operationId: signup_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignupInfo'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessToken'
          description: OK
        "400":
          description: A malformed request could not be processed, e.g. a field must
            be unique or non-empty but was not
      security: []
      summary: Creates a new user (signup)
      x-openapi-router-controller: ulmapi.controllers.impl.default_controller
  /user:
    get:
      operationId: user_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserInfo'
                type: array
          description: OK
        "400":
          description: A malformed request could not be processed, e.g. a field must
            be unique or non-empty but was not
        "401":
          description: Credentials are missing or invalid
        "404":
          description: Entity could not be found
      summary: Get user's information
      x-openapi-router-controller: ulmapi.controllers.impl.default_controller
    put:
      operationId: user_put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInfo'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfo'
          description: OK
        "400":
          description: A malformed request could not be processed, e.g. a field must
            be unique or non-empty but was not
        "401":
          description: Credentials are missing or invalid
        "404":
          description: Entity could not be found
      summary: Update user's information
      x-openapi-router-controller: ulmapi.controllers.impl.default_controller
components:
  responses:
    AuthorizationError:
      description: Credentials are missing or invalid
    BadRequest:
      description: A malformed request could not be processed, e.g. a field must be
        unique or non-empty but was not
    NotFoundError:
      description: Entity could not be found
  schemas:
    CourseInfo:
      example:
        expected_difficulty: 1
        course_id: course_id
        course_name: course_name
        deliverables:
          key:
            grade: 14
            weight: 59
            due_at: 2000-01-23T04:56:07.000+00:00
            completed: true
            deliverable_name: deliverable_name
        desired_grade: 60
        time_spent:
        - notes: notes
          started_at: 2000-01-23T04:56:07.000+00:00
          ended_at: 2000-01-23T04:56:07.000+00:00
        - notes: notes
          started_at: 2000-01-23T04:56:07.000+00:00
          ended_at: 2000-01-23T04:56:07.000+00:00
      properties:
        course_id:
          minLength: 1
          type: string
        course_name:
          minLength: 1
          type: string
        expected_difficulty:
          format: int32
          maximum: 5
          minimum: 1
          type: integer
        desired_grade:
          format: int32
          maximum: 100
          minimum: 0
          type: integer
        deliverables:
          additionalProperties:
            $ref: '#/components/schemas/DeliverableInfo'
          type: object
        time_spent:
          items:
            $ref: '#/components/schemas/TimeSpentInfo'
          type: array
      required:
      - course_id
      - course_name
      - desired_grade
      - expected_difficulty
      type: object
    DeliverableInfo:
      example:
        grade: 14
        weight: 59
        due_at: 2000-01-23T04:56:07.000+00:00
        completed: true
        deliverable_name: deliverable_name
      properties:
        deliverable_name:
          minLength: 1
          type: string
        grade:
          format: int32
          maximum: 100
          minimum: 0
          type: integer
        weight:
          format: int32
          maximum: 100
          minimum: 0
          type: integer
        due_at:
          format: date-time
          type: string
        completed:
          type: boolean
      required:
      - completed
      - deliverable_name
      - due_at
      - grade
      - weight
      type: object
    TimeSpentInfo:
      example:
        notes: notes
        started_at: 2000-01-23T04:56:07.000+00:00
        ended_at: 2000-01-23T04:56:07.000+00:00
      properties:
        notes:
          minLength: 1
          type: string
        started_at:
          format: date-time
          type: string
        ended_at:
          format: date-time
          type: string
      required:
      - ended_at
      - notes
      - started_at
      type: object
    UserInfo:
      example:
        joined_at: 2000-01-23T04:56:07.000+00:00
        courses:
          key:
            expected_difficulty: 1
            course_id: course_id
            course_name: course_name
            deliverables:
              key:
                grade: 14
                weight: 59
                due_at: 2000-01-23T04:56:07.000+00:00
                completed: true
                deliverable_name: deliverable_name
            desired_grade: 60
            time_spent:
            - notes: notes
              started_at: 2000-01-23T04:56:07.000+00:00
              ended_at: 2000-01-23T04:56:07.000+00:00
            - notes: notes
              started_at: 2000-01-23T04:56:07.000+00:00
              ended_at: 2000-01-23T04:56:07.000+00:00
        email: email
        username: username
      properties:
        username:
          minLength: 1
          type: string
        email:
          minLength: 1
          type: string
        joined_at:
          format: date-time
          type: string
        courses:
          additionalProperties:
            $ref: '#/components/schemas/CourseInfo'
          type: object
      required:
      - email
      - username
      type: object
    UserCredentials:
      example:
        password: password
        username: username
      properties:
        username:
          type: string
        password:
          type: string
      required:
      - password
      - username
      type: object
    AccessToken:
      example:
        access_token: access_token
      properties:
        access_token:
          type: string
      required:
      - access_token
      type: object
    SignupInfo:
      example:
        password: password
        email: email
        username: username
      properties:
        email:
          minLength: 1
          type: string
        username:
          minLength: 1
          type: string
        password:
          minLength: 1
          type: string
      required:
      - email
      - password
      - username
      type: object
    ScheduleInfo:
      example:
        starts_at: 2000-01-23
        max_study_hours: 1
        name: name
        time_allocations:
          key: 6.027456183070403
        ends_at: 2000-01-23
      properties:
        name:
          minLength: 1
          type: string
        starts_at:
          format: date
          type: string
        ends_at:
          format: date
          type: string
        max_study_hours:
          format: int32
          minimum: 1
          type: integer
        time_allocations:
          additionalProperties:
            type: number
          type: object
      required:
      - ends_at
      - max_study_hours
      - name
      - starts_at
      type: object
    Cat:
      example:
        birth_date: 2000-01-23T04:56:07.000+00:00
        cat_id: cat_id
        name: name
        weight: 8
      properties:
        cat_id:
          type: string
        name:
          type: string
        weight:
          maximum: 100
          minimum: 0
          type: integer
        birth_date:
          format: date-time
          type: string
      required:
      - birth_date
      - name
      - weight
      type: object
  securitySchemes:
    bearerAuth:
      scheme: bearer
      type: http
      x-bearerInfoFunc: ulmapi.controllers.impl.security_controller_.info_from_bearerAuth
